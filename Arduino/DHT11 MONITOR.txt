#include <DHT.h>
#include <DHT_U.h>

#include<LiquidCrystal.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

#include<stdio.h>
#include<unistd.h>
#include <stdlib.h>

// initialize the library with the numbers of the interface pins
LiquidCrystal_I2C lcd(0x27, 16, 2);


#define Buton 8
#define Dht 2

uint8_t btn_prev;

int kontrol=1;
int butonkonum=0;
float h,t,f;
float hif,hic;



// The additional white space is intentional to make things legible and look nice.
#include "DHT.h"

#define DHTPIN 2     // Digital pin connected to the DHT sensor
// Feather HUZZAH ESP8266 note: use pins 3, 4, 5, 12, 13 or 14 --
// Pin 15 can work but DHT must be disconnected during program upload.

// Uncomment whatever type you're using!
#define DHTTYPE DHT11   // DHT 11
//#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321
//#define DHTTYPE DHT21   // DHT 21 (AM2301)

// Connect pin 1 (on the left) of the sensor to +5V
// NOTE: If using a board with 3.3V logic like an Arduino Due connect pin 1
// to 3.3V instead of 5V!
// Connect pin 2 of the sensor to whatever your DHTPIN is
// Connect pin 3 (on the right) of the sensor to GROUND (if your sensor has 3 pins)
// Connect pin 4 (on the right) of the sensor to GROUND and leave the pin 3 EMPTY (if your sensor has 4 pins)
// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor

// Initialize DHT sensor.
// Note that older versions of this library took an optional third parameter to
// tweak the timings for faster processors.  This parameter is no longer needed
// as the current DHT reading algorithm adjusts itself to work on faster procs.
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(9600);
  lcd.begin();




  pinMode(Buton, INPUT);
  pinMode(Dht, OUTPUT);
  
  lcd.home();
  
  dht.begin();

 
  
  
  /*
  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("째C "));
  Serial.print(f);
  
  
  
  Serial.print(F("째F  Heat index: "));
  Serial.print(hic);
  Serial.print(F("째C "));
  Serial.print(hif);
  Serial.println(F("째F"));
  */
}

void butonBas()
{

  uint8_t btn = digitalRead(Buton);

  if (btn == LOW && btn_prev == HIGH)
  {
    if(kontrol==1)
    {
      kontrol=0;
    }
    else if(kontrol==0){
      kontrol = 1;
    }
  }

  btn_prev = digitalRead(Buton);


  /*
  butonkonum=digitalRead(Buton);
  if(butonkonum == 1){
    if(kontrol==1){
      kontrol=0;
      Serial.print(kontrol);
      }
    else{
      kontrol=1;
      Serial.print(kontrol);
      }
  }
  */
}
  
void islem()
{
  if(kontrol==1){
    lcd.clear();
       lcd.setCursor(0,0);
        lcd.print("TEM(F):");
        lcd.print(f);
        lcd.print("  EN");
      
        lcd.setCursor(0,1);
      
        lcd.print("HUM(%):");
        lcd.print(h);
      }
    else if(kontrol==0){
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("SIC(C):");
      lcd.print(t);
      lcd.print("  TR");
    
      lcd.setCursor(0,1);
    
      lcd.print("NEM(%):");
      lcd.print(h);
      }

      //delay(2000);
}
  
void loop() 
{
  lcd.clear();

  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  t = dht.readTemperature();
  // Read temperature as Fahrenheit (isFahrenheit = true)
  f = dht.readTemperature(true);

  
  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)) {
    //Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }

  // Compute heat index in Fahrenheit (the default)
  hif = dht.computeHeatIndex(f, h);
  // Compute heat index in Celsius (isFahreheit = false)
  hic = dht.computeHeatIndex(t, h, false);
  
  /*
       lcd.setCursor(0,0);
        lcd.print("TEM(F):");
        lcd.print(f);
        lcd.print("  EN");
      
        lcd.setCursor(0,1);
      
        lcd.print("HUM(%):");
        lcd.print(h);
   */
   
  
  butonBas();
  
  islem();


}